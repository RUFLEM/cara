{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-cara/components/PF/colourboxes/helpers.js","webpack:///./src/@lekoarts/gatsby-theme-cara/components/PF/colourboxes/Box.js","webpack:///./src/@lekoarts/gatsby-theme-cara/components/PF/colourboxes/BoxContainer.js","webpack:///./src/pages/colourBoxes.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js"],"names":["choice","arr","Math","floor","random","length","Box","props","state","color","colors","handleClick","bind","pickColor","newColor","this","setState","render","className","style","backgroundColor","onClick","Component","BoxContainer","boxes","Array","from","numBoxes","map","allColors","defaultProps","ColourBoxes","href","_assertThisInitialized","self","ReferenceError"],"mappings":"gMAEA,SAASA,EAAOC,GAEd,OAAOA,EADWC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,S,0BC6BpCC,E,YA3Bb,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CAAEC,MAAOT,EAAO,EAAKO,MAAMG,SACxC,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAHF,E,4CAKnBC,UAAA,WACE,IAAIC,EACJ,GACEA,EAAWd,EAAOe,KAAKR,MAAMG,cACtBI,IAAaC,KAAKP,MAAMC,OAEjCM,KAAKC,SAAS,CAAEP,MAAOK,K,EAEzBH,YAAA,WACEI,KAAKF,a,EAEPI,OAAA,WACE,OACE,mBACEC,UAAU,MACVC,MAAO,CAAEC,gBAAiBL,KAAKP,MAAMC,OACrCY,QAASN,KAAKJ,e,GAtBJW,aCAZC,G,4GAKJN,OAAA,WAAU,IAAD,OACDO,EAAQC,MAAMC,KAAK,CAAErB,OAAQU,KAAKR,MAAMoB,WAAYC,KAAI,kBAC5D,YAAC,EAAD,CAAKlB,OAAQ,EAAKH,MAAMsB,eAE1B,OAAO,mBAAKX,UAAU,gBAAgBM,I,GATfF,cAArBC,EACGO,aAAe,CACpBH,SAAU,GACVE,UAAW,CAAC,SAAU,UAAW,SAAU,SAUhCN,QCZA,SAASQ,IACpB,OACI,uBACI,mBAAKb,UAAU,YACX,YAAC,EAAD,OAGJ,iBAAGc,KAAK,YAAR,e,kCCZG,SAASC,EAAuBC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,EALT,mC","file":"component---src-pages-colour-boxes-js-6330c88e5c510cb36136.js","sourcesContent":["/** Return a random item from a list. */\n\nfunction choice(arr) {\n  let randomIndex = Math.floor(Math.random() * arr.length);\n  return arr[randomIndex];\n}\n\nexport { choice };\n","import React, { Component } from \"react\";\nimport { choice } from \"./helpers\";\nimport \"./Box.css\";\n\nclass Box extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { color: choice(this.props.colors) };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  pickColor() {\n    let newColor;\n    do {\n      newColor = choice(this.props.colors);\n    } while (newColor === this.state.color);\n\n    this.setState({ color: newColor });\n  }\n  handleClick() {\n    this.pickColor();\n  }\n  render() {\n    return (\n      <div\n        className='Box'\n        style={{ backgroundColor: this.state.color }}\n        onClick={this.handleClick}\n      />\n    );\n  }\n}\n\nexport default Box;\n","import React, { Component } from \"react\";\nimport Box from \"./Box\";\nimport \"./BoxContainer.css\";\n\nclass BoxContainer extends Component {\n  static defaultProps = {\n    numBoxes: 18,\n    allColors: [\"purple\", \"magenta\", \"violet\", \"pink\"]\n  };\n  render() {\n    const boxes = Array.from({ length: this.props.numBoxes }).map(() => (\n      <Box colors={this.props.allColors} />\n    ));\n    return <div className='BoxContainer'>{boxes}</div>;\n  }\n}\n\nexport default BoxContainer;\n","import React from \"react\"\nimport \"../@lekoarts/gatsby-theme-cara/components/PF/colourboxes/BoxApp.css\"\nimport BoxContainer from \"../@lekoarts/gatsby-theme-cara/components/PF/colourboxes/BoxContainer\"\n\n\nexport default function ColourBoxes() {\n    return (\n        <div>\n            <div className=\"DiceGame\">\n                <BoxContainer></BoxContainer>\n\n            </div>\n            <a href=\"/project\">Projects</a>\n        </div>\n    );\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}"],"sourceRoot":""}